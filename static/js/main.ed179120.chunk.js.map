{"version":3,"sources":["components/Card.js","components/Footer.js","components/ScoreCard.js","components/Message.js","components/Header.js","data/cards.js","hooks/getRandomCards.js","hooks/resetClicks.js","App.js","index.js"],"names":["Card","card","handleCardClick","onClick","style","width","height","border","margin","padding","backgroundColor","boxShadow","src","image","alt","textAlign","text","Footer","position","bottom","opacity","href","target","rel","ScoreCard","highScore","currentScore","fontSize","Message","defaultStyle","display","alignContent","paddingLeft","Header","gameOver","win","gridTemplateColumns","id","this","clicked","cardArray","getRandomCards","setWin","unclickedArray","cards","filter","console","log","length","push","Math","floor","random","randInt","randCard","includes","array","temporaryValue","randomIndex","currentIndex","shuffleArray","resetClicks","Cards","forEach","App","useState","setHighScore","setCurrentScore","setGameOver","setCardArray","useEffect","flexWrap","justifyContent","boxSizing","map","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ed179120.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ card, handleCardClick }) => {\n  const style = {\n    width: '150px',\n    height: '200px',\n    border: '1px solid black',\n    margin: '10px',\n    padding: '10px',\n    backgroundColor: 'white',\n    boxShadow: '1px 1px 3px orange',\n  };\n\n  return (\n    <div onClick={() => handleCardClick(card)} style={style}>\n      <div style={{ width: '80%', margin: 'auto' }}>\n        <img style={{ width: '100%' }} src={card.image} alt={card.alt}></img>\n      </div>\n      <h2 style={{ textAlign: 'center', margin: '0' }}>{card.text}</h2>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\n\nconst Footer = () => {\n  return (\n    <div\n      style={{\n        position: 'absolute',\n        bottom: '0',\n        padding: '12px',\n        opacity: '0.5',\n      }}\n    >\n      Created by{' '}\n      <a href=\"http://www.mikecotton.co.uk\" target=\"_blank\" rel=\"noreferrer\">\n        Mike Cotton\n      </a>{' '}\n      as a project from The Odin Project\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nconst ScoreCard = ({ highScore, currentScore }) => {\n  return (\n    <div style={{ width: '50vw', fontSize: '1.1em' }}>\n      <div>\n        High Score: <span>{highScore}</span>\n      </div>\n      <div>\n        Current Score: <span>{currentScore}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default ScoreCard;\n","import React from 'react';\n\nconst Message = ({ text, style }) => {\n  const defaultStyle = {\n    ...style,\n    display: 'grid',\n    alignContent: 'center',\n  };\n\n  return (\n    <div style={defaultStyle}>\n      <h3 style={{ margin: '0', paddingLeft: '10px' }}>{text}</h3>\n    </div>\n  );\n};\n\nexport default Message;\n","import React from 'react';\nimport ScoreCard from './ScoreCard';\nimport Message from './Message';\n\nconst Header = ({ highScore, currentScore, gameOver, win }) => {\n  const headerStyle = {\n    display: 'grid',\n    gridTemplateColumns: '1fr 1fr',\n    backgroundColor: '#FFD800',\n    padding: '10px',\n    margin: 'auto',\n  };\n\n  return (\n    <header>\n      <div style={headerStyle}>\n        <ScoreCard highScore={highScore} currentScore={currentScore} />\n        {gameOver ? <Message text=\"Game Over, try again...\" /> : null}\n        {win ? <Message text=\"You win!!!\" /> : null}\n      </div>\n      <Message\n        text=\"EMOJI MEMORY GAME - Don't click the same card twice\"\n        style={{ margin: '10px 0', fontSize: '0.9em' }}\n      />\n    </header>\n  );\n};\n\nexport default Header;\n","function Card(id, image, text) {\n  this.id = id;\n  this.image = `./images/${image}.png`;\n  this.text = text;\n  this.alt = text;\n  this.clicked = false;\n}\n\nlet cardArray = [\n  new Card(0, 'angel', 'Angel'),\n  new Card(1, 'angry', 'Angry'),\n  new Card(2, 'beaming', 'Beaming'),\n  new Card(3, 'blushing', 'Blushing'),\n  new Card(4, 'cheesy-grin', 'Cheesy'),\n  new Card(5, 'cool', 'Cool', ''),\n  new Card(6, 'crazy', 'Crazy'),\n  new Card(7, 'crying', 'Crying'),\n  new Card(8, 'curious', 'Curious'),\n  new Card(9, 'cute', 'Cute'),\n  new Card(10, 'embarassed', 'Embarassed'),\n  new Card(11, 'goofy', 'Goofy'),\n  new Card(12, 'grin-big-eyes', 'Big-eyed Grin'),\n  new Card(13, 'grin-little-eyes', 'Small-eyed Grin'),\n  new Card(14, 'grin', 'Grin'),\n  new Card(15, 'happy', 'Happy'),\n  new Card(16, 'laughter', 'Laughter'),\n  new Card(17, 'lick', 'Lick'),\n  new Card(18, 'lmfao', 'LMFAO'),\n  new Card(19, 'love', 'Love'),\n  new Card(20, 'oh-dear', 'Oh Dear!'),\n  new Card(21, 'party', 'Party'),\n  new Card(22, 'side-laughter', 'Laughing'),\n  new Card(23, 'sneaky', 'Sneaky'),\n  new Card(24, 'stars', 'Star Struck'),\n  new Card(25, 'sweaty', 'Sweaty'),\n  new Card(26, 'undercover', 'Undercover'),\n  new Card(27, 'upside-down', 'Upside-Down'),\n  new Card(28, 'whoops', 'Whoops'),\n  new Card(29, 'wink', 'Wink'),\n  new Card(30, 'worried', 'Worried'),\n];\n\nexport default cardArray;\n","import cards from '../data/cards';\n\n// Fisher-Yates shuffle\nconst shuffleArray = array => {\n  let currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\nconst unclickedCards = () => {\n  return cards.filter(card => card.clicked === false);\n};\n\nconst getRandomCards = setWin => {\n  let cardArray = [],\n    unclickedArray;\n\n  // Ensure there's always at least one unclicked card displayed\n  unclickedArray = unclickedCards();\n\n  console.log(unclickedArray);\n\n  if (unclickedArray.length > 0) {\n    cardArray.push(\n      unclickedArray[Math.floor(Math.random() * unclickedArray.length)]\n    );\n  } else {\n    setWin(true);\n  }\n\n  // Fill the remaining array randomly\n  while (cardArray.length < 6) {\n    let randInt = Math.floor(Math.random() * 8);\n    let randCard = cards[randInt];\n\n    if (!cardArray.includes(randCard)) {\n      cardArray.push(randCard);\n    }\n  }\n\n  return shuffleArray(cardArray);\n};\n\nexport default getRandomCards;\n","import Cards from '../data/cards';\n\nconst resetClicks = () => {\n  Cards.forEach(card => (card.clicked = false));\n};\n\nexport default resetClicks;\n","import React, { useState, useEffect } from 'react';\nimport Card from './components/Card';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport getRandomCards from './hooks/getRandomCards';\nimport resetClicks from './hooks/resetClicks';\nimport './index.css';\n\nconst App = () => {\n  const [highScore, setHighScore] = useState(0);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [cardArray, setCardArray] = useState([]);\n  const [win, setWin] = useState(false);\n\n  useEffect(() => {\n    setCardArray(getRandomCards(setWin));\n  }, [currentScore]);\n\n  const handleCardClick = card => {\n    if (card.clicked) {\n      setGameOver(true);\n      setHighScore(currentScore);\n      setCurrentScore(0);\n      resetClicks();\n    } else {\n      setCurrentScore(currentScore + 1);\n      setGameOver(false);\n      card.clicked = true;\n    }\n  };\n\n  return (\n    <>\n      <Header\n        highScore={highScore}\n        currentScore={currentScore}\n        gameOver={gameOver}\n        win={win}\n      />\n      <main\n        style={{\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          width: '100%',\n          margin: 'auto',\n          backgroundColor: '#FFF4BA',\n          padding: '40px 0',\n          boxSizing: 'border-box',\n        }}\n      >\n        {cardArray.map(card => (\n          <Card key={card.id} card={card} handleCardClick={handleCardClick} />\n        ))}\n      </main>\n      <Footer />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}